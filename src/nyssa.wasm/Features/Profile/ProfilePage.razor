@page "/profile"
@using Nyssa.Wasm.Features.Authentication
@inject AuthenticationStateService AuthStateService
@inject NavigationManager Navigation
@inject OidcAuthenticationService AuthService
@implements IDisposable

<div class="min-h-screen bg-gray-50">
    <div class="max-w-4xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
        @if (authState.IsAuthenticated && authState.User != null)
        {
            <div class="bg-white shadow rounded-lg overflow-hidden">
                <!-- Profile Header -->
                <div class="bg-gradient-to-r from-blue-500 to-purple-600 p-6 sm:p-8">
                    <div class="flex items-center space-x-4">
                        <div class="flex-shrink-0">
                            @if (!string.IsNullOrEmpty(authState.User.ProfilePictureUrl))
                            {
                                <img class="h-20 w-20 rounded-full border-4 border-white shadow-lg" 
                                     src="@authState.User.ProfilePictureUrl" 
                                     alt="Profile picture" />
                            }
                            else
                            {
                                <div class="h-20 w-20 rounded-full bg-white bg-opacity-20 border-4 border-white shadow-lg flex items-center justify-center text-2xl font-bold text-white">
                                    @authState.User.Initials
                                </div>
                            }
                        </div>
                        <div class="flex-1 min-w-0">
                            <h1 class="text-2xl font-bold text-white">@authState.User.FullName</h1>
                            <p class="text-blue-100">@authState.User.Email</p>
                            <p class="text-sm text-blue-100 mt-1">Member since @authState.User.CreatedAt.ToString("MMMM yyyy")</p>
                        </div>
                        <div>
                            <button @onclick="@(() => isEditing ? SaveChanges() : StartEditing())" 
                                    class="inline-flex items-center px-4 py-2 border border-white border-opacity-50 text-sm font-medium rounded-md text-white bg-white bg-opacity-20 hover:bg-opacity-30 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-white transition-all">
                                @if (!isEditing)
                                {
                                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v12a2 2 0 002 2h12a2 2 0 002-2v-4.5M18.5 2.5a2.121 2.121 0 013 3L12 15l-4 1 1-4 9.5-9.5z" />
                                    </svg>
                                    <span>Edit Profile</span>
                                }
                                else
                                {
                                    @if (isSaving)
                                    {
                                        <svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-white" fill="none" viewBox="0 0 24 24">
                                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                        </svg>
                                    }
                                    <span>@(isSaving ? "Saving..." : "Save Changes")</span>
                                }
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Profile Content -->
                <div class="px-4 py-5 sm:p-6">
                    <div class="grid grid-cols-1 gap-6 lg:grid-cols-2">
                        <!-- Profile Information Section -->
                        <div class="bg-gray-50 rounded-lg p-6">
                            <div class="flex items-center mb-4">
                                <svg class="w-5 h-5 text-gray-400 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                                </svg>
                                <h3 class="text-lg font-medium text-gray-900">Profile Information</h3>
                            </div>
                            <div class="space-y-4">
                                <div>
                                    <label for="firstName" class="block text-sm font-medium text-gray-700">First Name</label>
                                    <input type="text" id="firstName" @bind="editedProfile.FirstName" 
                                           class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm @(isEditing ? "" : "bg-gray-100")"
                                           disabled="@(!isEditing)" />
                                </div>
                                <div>
                                    <label for="lastName" class="block text-sm font-medium text-gray-700">Last Name</label>
                                    <input type="text" id="lastName" @bind="editedProfile.LastName" 
                                           class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm @(isEditing ? "" : "bg-gray-100")"
                                           disabled="@(!isEditing)" />
                                </div>
                                <div>
                                    <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
                                    <input type="email" id="email" @bind="editedProfile.Email" 
                                           class="mt-1 block w-full rounded-md border-gray-300 shadow-sm bg-gray-100 sm:text-sm cursor-not-allowed"
                                           disabled />
                                    <p class="mt-1 text-xs text-gray-500">Email cannot be changed</p>
                                </div>
                            </div>
                        </div>

                        <!-- Organization Section -->
                        <div class="bg-gray-50 rounded-lg p-6">
                            <div class="flex items-center mb-4">
                                <svg class="w-5 h-5 text-gray-400 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
                                </svg>
                                <h3 class="text-lg font-medium text-gray-900">Organization</h3>
                            </div>
                            <div class="space-y-4">
                                <div>
                                    <label class="block text-sm font-medium text-gray-700">Current Organization</label>
                                    <div class="mt-1 text-sm text-gray-900">org_current</div>
                                </div>
                                <div>
                                    <label for="orgSwitch" class="block text-sm font-medium text-gray-700 mb-1">Switch Organization</label>
                                    <select id="orgSwitch" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm">
                                        <option>Select an organization...</option>
                                    </select>
                                    <p class="mt-1 text-xs text-gray-500">Switching organizations will exchange your current token for access to the selected organization.</p>
                                </div>
                            </div>
                        </div>

                        <!-- Access Token Details Section -->
                        <div class="bg-gray-50 rounded-lg p-6">
                            <div class="flex items-center justify-between mb-4">
                                <div class="flex items-center">
                                    <svg class="w-5 h-5 text-gray-400 mr-2 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z" />
                                    </svg>
                                    <h3 class="text-lg font-medium text-gray-900">Access Token Details</h3>
                                </div>
                                <button @onclick="ToggleTokenDetails" class="text-sm text-indigo-600 hover:text-indigo-500 flex items-center">
                                    <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="@(showTokenDetails ? "M15 12H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z" : "M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z")" />
                                    </svg>
                                    @(showTokenDetails ? "Hide" : "Show")
                                </button>
                            </div>
                            @if (showTokenDetails)
                            {
                                <div class="space-y-2 text-sm">
                                    <div>
                                        <span class="font-medium text-gray-700">Type:</span>
                                        <span class="text-gray-900 ml-2">Bearer</span>
                                    </div>
                                    <div>
                                        <span class="font-medium text-gray-700">Expires:</span>
                                        <span class="text-gray-900 ml-2">In 24 hours</span>
                                    </div>
                                    <div>
                                        <span class="font-medium text-gray-700">Scopes:</span>
                                        <span class="text-gray-900 ml-2">Full access</span>
                                    </div>
                                </div>
                            }
                        </div>

                        <!-- ID Token Details Section -->
                        <div class="bg-gray-50 rounded-lg p-6">
                            <div class="flex items-center justify-between mb-4">
                                <div class="flex items-center">
                                    <svg class="w-5 h-5 text-gray-400 mr-2 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V8a2 2 0 00-2-2h-5m-4 0V5a2 2 0 114 0v1m-4 0a2 2 0 104 0m-5 8a2 2 0 100-4 2 2 0 000 4zm0 0c1.306 0 2.417.835 2.83 2M9 14a3.001 3.001 0 00-2.83 2M15 11h3m-3 4h2" />
                                    </svg>
                                    <h3 class="text-lg font-medium text-gray-900">ID Token Details</h3>
                                </div>
                                <button @onclick="ToggleIdTokenDetails" class="text-sm text-indigo-600 hover:text-indigo-500 flex items-center">
                                    <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="@(showIdTokenDetails ? "M15 12H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z" : "M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z")" />
                                    </svg>
                                    @(showIdTokenDetails ? "Hide" : "Show")
                                </button>
                            </div>
                            @if (showIdTokenDetails)
                            {
                                <div class="space-y-2 text-sm">
                                    <div>
                                        <span class="font-medium text-gray-700">User ID:</span>
                                        <span class="text-gray-900 ml-2 font-mono text-xs">@authState.User.Id</span>
                                    </div>
                                    <div>
                                        <span class="font-medium text-gray-700">Issued At:</span>
                                        <span class="text-gray-900 ml-2">@authState.User.UpdatedAt.ToString("yyyy-MM-dd HH:mm:ss UTC")</span>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Additional Actions Section -->
                    <div class="mt-6 flex justify-end space-x-4">
                        <button class="inline-flex items-center px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-all">
                            <svg class="w-4 h-4 mr-2 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                            </svg>
                            Settings
                        </button>
                        <button @onclick="SignOut" class="inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-red-600 border border-transparent rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-all">
                            <svg class="w-4 h-4 mr-2 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
                            </svg>
                            Sign Out
                        </button>
                    </div>

                    <!-- Session Information -->
                    <div class="mt-6 bg-gray-50 rounded-lg p-6">
                        <div class="flex items-center mb-4">
                            <svg class="w-5 h-5 text-gray-400 mr-2 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                            </svg>
                            <h3 class="text-lg font-medium text-gray-900">Session Information</h3>
                        </div>
                        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 text-sm">
                            <div>
                                <span class="font-medium text-gray-700">Last Updated:</span>
                                <span class="text-gray-900 ml-2">@DateTime.UtcNow.ToString("yyyy-MM-dd HH:mm:ss UTC")</span>
                            </div>
                            <div>
                                <span class="font-medium text-gray-700">Session Status:</span>
                                <span class="text-green-600 ml-2 font-medium">Active</span>
                            </div>
                        </div>
                    </div>

                    <!-- Action Buttons -->
                    <div class="mt-8 flex justify-between">
                        <div>
                            @if (isEditing)
                            {
                                <button @onclick="CancelEditing"
                                        class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md shadow-sm text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                    Cancel
                                </button>
                            }
                        </div>
                        
                        <button @onclick="GoBack"
                                class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md shadow-sm text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
                            </svg>
                            Back
                        </button>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="text-center py-12">
                <div class="max-w-md mx-auto">
                    <h1 class="text-2xl font-bold text-gray-900">Access Denied</h1>
                    <p class="mt-2 text-gray-600">You must be logged in to view your profile.</p>
                    <button @onclick="GoHome" 
                            class="mt-4 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700">
                        Go Home
                    </button>
                </div>
            </div>
        }
    </div>
</div>

@code {
    private Authentication.AuthenticationState authState = new();
    private UserProfile editedProfile = new();
    private bool isEditing = false;
    private bool isSaving = false;
    private bool showTokenDetails = false;
    private bool showIdTokenDetails = false;

    protected override async Task OnInitializedAsync()
    {
        await AuthStateService.InitializeAsync();
        authState = AuthStateService.GetAuthState();
        
        if (authState.User != null)
        {
            // Create a copy for editing
            editedProfile = new UserProfile
            {
                Id = authState.User.Id,
                Email = authState.User.Email,
                FirstName = authState.User.FirstName,
                LastName = authState.User.LastName,
                ProfilePictureUrl = authState.User.ProfilePictureUrl,
                CreatedAt = authState.User.CreatedAt,
                UpdatedAt = authState.User.UpdatedAt
            };
        }

        AuthStateService.AuthStateChanged += OnAuthStateChanged;
    }

    private void OnAuthStateChanged()
    {
        authState = AuthStateService.GetAuthState();
        InvokeAsync(StateHasChanged);
    }

    private void StartEditing()
    {
        isEditing = true;
    }

    private async Task SaveChanges()
    {
        isSaving = true;
        try
        {
            // Here you would call an API to update the user profile
            // For now, we'll just update the local state
            await Task.Delay(1000); // Simulate API call
            
            // Update the user in auth state
            if (authState.User != null)
            {
                authState.User.FirstName = editedProfile.FirstName;
                authState.User.LastName = editedProfile.LastName;
                authState.User.UpdatedAt = DateTime.UtcNow;
            }

            isEditing = false;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Failed to save changes: {ex.Message}");
            // Show error message to user
        }
        finally
        {
            isSaving = false;
        }
    }

    private void CancelEditing()
    {
        // Reset to original values
        if (authState.User != null)
        {
            editedProfile.FirstName = authState.User.FirstName;
            editedProfile.LastName = authState.User.LastName;
        }
        isEditing = false;
    }

    private void ToggleTokenDetails()
    {
        showTokenDetails = !showTokenDetails;
    }

    private void ToggleIdTokenDetails()
    {
        showIdTokenDetails = !showIdTokenDetails;
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/");
    }

    private void GoHome()
    {
        Navigation.NavigateTo("/");
    }

    private async Task SignOut()
    {
        await AuthService.LogoutAsync();
        Navigation.NavigateTo("/");
    }

    public void Dispose()
    {
        AuthStateService.AuthStateChanged -= OnAuthStateChanged;
    }
}