@page "/auth/callback"
@inject NavigationManager Navigation
@inject OidcAuthenticationService AuthService

<div class="flex items-center justify-center min-h-screen">
    <div class="text-center">
        @if (IsLoading)
        {
            <div class="text-lg">Processing authentication...</div>
        }
        else if (!string.IsNullOrEmpty(SuccessMessage))
        {
            <div class="text-green-600 text-lg">@SuccessMessage</div>
            <button @onclick="GoHome" class="mt-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600">
                Go to Dashboard
            </button>
        }
        else if (!string.IsNullOrEmpty(Error))
        {
            <div class="text-red-600 text-lg">Error: @Error</div>
            <button @onclick="GoHome" class="mt-4 px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600">
                Go Home
            </button>
        }
    </div>
</div>

@code {
    private string? Error;
    private string? SuccessMessage;
    private bool IsLoading = true;

    protected override async Task OnInitializedAsync()
    {
        var uri = Navigation.ToAbsoluteUri(Navigation.Uri);
        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
        var authCode = query["code"];
        var error = query["error"];

        if (!string.IsNullOrEmpty(error))
        {
            Error = error;
        }
        else if (!string.IsNullOrEmpty(authCode))
        {
            try
            {
                await AuthService.ExchangeCodeForTokenAsync(authCode);
                SuccessMessage = "Authentication successful!";
                
                // Auto-redirect to dashboard after 1 second
                await Task.Delay(1000);
                Navigation.NavigateTo("/app");
                return;
            }
            catch (Exception ex)
            {
                Error = $"Authentication failed: {ex.Message}";
            }
        }
        else
        {
            Error = "No authorization code received";
        }
        
        IsLoading = false;
    }

    private void GoHome()
    {
        // After successful authentication, redirect to app dashboard
        if (!string.IsNullOrEmpty(SuccessMessage))
        {
            Navigation.NavigateTo("/app");
        }
        else
        {
            Navigation.NavigateTo("/");
        }
    }
}