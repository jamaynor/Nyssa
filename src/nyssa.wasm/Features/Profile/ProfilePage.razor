@page "/profile"
@using Nyssa.Wasm.Features.Authentication
@inject AuthenticationStateService AuthStateService
@inject NavigationManager Navigation
@implements IDisposable

<div class="min-h-screen bg-gray-50">
    <div class="max-w-4xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
        @if (authState.IsAuthenticated && authState.User != null)
        {
            <div class="bg-white shadow rounded-lg">
                <!-- Profile Header -->
                <div class="px-4 py-5 sm:px-6 bg-gradient-to-r from-blue-500 to-purple-600 text-white rounded-t-lg">
                    <div class="flex items-center space-x-4">
                        <div class="flex-shrink-0">
                            @if (!string.IsNullOrEmpty(authState.User.ProfilePictureUrl))
                            {
                                <img class="h-20 w-20 rounded-full border-4 border-white shadow-lg" 
                                     src="@authState.User.ProfilePictureUrl" 
                                     alt="Profile picture" />
                            }
                            else
                            {
                                <div class="h-20 w-20 rounded-full bg-white bg-opacity-20 border-4 border-white shadow-lg flex items-center justify-center text-2xl font-bold">
                                    @authState.User.Initials
                                </div>
                            }
                        </div>
                        <div class="flex-1 min-w-0">
                            <h1 class="text-2xl font-bold">@authState.User.FullName</h1>
                            <p class="text-blue-100">@authState.User.Email</p>
                        </div>
                    </div>
                </div>

                <!-- Profile Content -->
                <div class="px-4 py-5 sm:p-6">
                    <div class="grid grid-cols-1 gap-6 lg:grid-cols-2">
                        <!-- Personal Information -->
                        <div class="space-y-6">
                            <div>
                                <h3 class="text-lg font-medium text-gray-900 mb-4">Personal Information</h3>
                                <div class="space-y-4">
                                    <div>
                                        <label for="firstName" class="block text-sm font-medium text-gray-700">First Name</label>
                                        <input type="text" id="firstName" @bind="editedProfile.FirstName" 
                                               class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
                                               disabled="@(!isEditing)" />
                                    </div>
                                    <div>
                                        <label for="lastName" class="block text-sm font-medium text-gray-700">Last Name</label>
                                        <input type="text" id="lastName" @bind="editedProfile.LastName" 
                                               class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
                                               disabled="@(!isEditing)" />
                                    </div>
                                    <div>
                                        <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
                                        <input type="email" id="email" @bind="editedProfile.Email" 
                                               class="mt-1 block w-full rounded-md border-gray-300 shadow-sm bg-gray-50 sm:text-sm"
                                               disabled />
                                        <p class="mt-1 text-xs text-gray-500">Email cannot be changed</p>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Account Details -->
                        <div class="space-y-6">
                            <div>
                                <h3 class="text-lg font-medium text-gray-900 mb-4">Account Details</h3>
                                <div class="space-y-4">
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700">User ID</label>
                                        <div class="mt-1 text-sm text-gray-900 bg-gray-50 px-3 py-2 rounded-md font-mono">
                                            @authState.User.Id
                                        </div>
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700">Account Created</label>
                                        <div class="mt-1 text-sm text-gray-900">
                                            @authState.User.CreatedAt.ToString("MMMM dd, yyyy 'at' h:mm tt")
                                        </div>
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700">Last Updated</label>
                                        <div class="mt-1 text-sm text-gray-900">
                                            @authState.User.UpdatedAt.ToString("MMMM dd, yyyy 'at' h:mm tt")
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Action Buttons -->
                    <div class="mt-8 flex justify-between">
                        <div>
                            @if (!isEditing)
                            {
                                <button @onclick="StartEditing" 
                                        class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v12a2 2 0 002 2h12a2 2 0 002-2v-4.5M18.5 2.5a2.121 2.121 0 013 3L12 15l-4 1 1-4 9.5-9.5z" />
                                    </svg>
                                    Edit Profile
                                </button>
                            }
                            else
                            {
                                <div class="space-x-3">
                                    <button @onclick="SaveChanges" disabled="@isSaving"
                                            class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:opacity-50">
                                        @if (isSaving)
                                        {
                                            <svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-white" fill="none" viewBox="0 0 24 24">
                                                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                            </svg>
                                        }
                                        @(isSaving ? "Saving..." : "Save Changes")
                                    </button>
                                    <button @onclick="CancelEditing"
                                            class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md shadow-sm text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                        Cancel
                                    </button>
                                </div>
                            }
                        </div>
                        
                        <button @onclick="GoBack"
                                class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md shadow-sm text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
                            </svg>
                            Back
                        </button>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="text-center py-12">
                <div class="max-w-md mx-auto">
                    <h1 class="text-2xl font-bold text-gray-900">Access Denied</h1>
                    <p class="mt-2 text-gray-600">You must be logged in to view your profile.</p>
                    <button @onclick="GoHome" 
                            class="mt-4 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700">
                        Go Home
                    </button>
                </div>
            </div>
        }
    </div>
</div>

@code {
    private Authentication.AuthenticationState authState = new();
    private UserProfile editedProfile = new();
    private bool isEditing = false;
    private bool isSaving = false;

    protected override async Task OnInitializedAsync()
    {
        await AuthStateService.InitializeAsync();
        authState = AuthStateService.GetAuthState();
        
        if (authState.User != null)
        {
            // Create a copy for editing
            editedProfile = new UserProfile
            {
                Id = authState.User.Id,
                Email = authState.User.Email,
                FirstName = authState.User.FirstName,
                LastName = authState.User.LastName,
                ProfilePictureUrl = authState.User.ProfilePictureUrl,
                CreatedAt = authState.User.CreatedAt,
                UpdatedAt = authState.User.UpdatedAt
            };
        }

        AuthStateService.AuthStateChanged += OnAuthStateChanged;
    }

    private void OnAuthStateChanged()
    {
        authState = AuthStateService.GetAuthState();
        InvokeAsync(StateHasChanged);
    }

    private void StartEditing()
    {
        isEditing = true;
    }

    private async Task SaveChanges()
    {
        isSaving = true;
        try
        {
            // Here you would call an API to update the user profile
            // For now, we'll just update the local state
            await Task.Delay(1000); // Simulate API call
            
            // Update the user in auth state
            if (authState.User != null)
            {
                authState.User.FirstName = editedProfile.FirstName;
                authState.User.LastName = editedProfile.LastName;
                authState.User.UpdatedAt = DateTime.UtcNow;
            }

            isEditing = false;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Failed to save changes: {ex.Message}");
            // Show error message to user
        }
        finally
        {
            isSaving = false;
        }
    }

    private void CancelEditing()
    {
        // Reset to original values
        if (authState.User != null)
        {
            editedProfile.FirstName = authState.User.FirstName;
            editedProfile.LastName = authState.User.LastName;
        }
        isEditing = false;
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/");
    }

    private void GoHome()
    {
        Navigation.NavigateTo("/");
    }

    public void Dispose()
    {
        AuthStateService.AuthStateChanged -= OnAuthStateChanged;
    }
}